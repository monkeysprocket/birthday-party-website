AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  party-backend

  Backend for party invite webapp. Lambda functions behind API Gateway.

Globals:
  Function:
    Timeout: 3

Resources:
  IndexFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: index/
      Handler: index.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Environment:
        Variables:
          CORS_ORIGIN: "https://party.matthewjamesquinn.com"
      Events:
        PartyAPI:
          Type: HttpApi
          Properties:
            ApiId: !Ref PartyApi
            Path: /
            Method: get

  InviteFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: invite/
      Handler: invite.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Environment:
        Variables:
          DYNAMODB_GUESTS_TABLE: "guests"
          CORS_ORIGIN: "https://party.matthewjamesquinn.com"
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/guests
      Events:
        PartyAPI:
          Type: HttpApi
          Properties:
            ApiId: !Ref PartyApi
            Path: /invite/{uuid}
            Method: get

  AdminFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: admin/
      Handler: app.admin.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Environment:
        Variables:
          DYNAMODB_USERS_TABLE: "users"
          DYNAMODB_GUESTS_TABLE: "guests"
          CORS_ORIGIN: "https://party.matthewjamesquinn.com"
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource:
                - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/users
            - Effect: Allow
              Action:
                - dynamodb:Scan
              Resource:
                - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/guests
      Events:
        PartyAPI:
          Type: HttpApi
          Properties:
            ApiId: !Ref PartyApi
            Path: /admin
            Method: get

  UpdateGuestRSVPFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: update_guest_rsvp/
      Handler: update_guest_rsvp.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Environment:
        Variables:
          DYNAMODB_GUESTS_TABLE: "guests"
          CORS_ORIGIN: "https://party.matthewjamesquinn.com"
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:UpdateItem
              Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/guests
      Events:
        PartyAPI:
          Type: HttpApi
          Properties:
            ApiId: !Ref PartyApi
            Path: /rsvp
            Method: post

  AddGuestFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: add_guest/
      Handler: app.main.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Environment:
        Variables:
          DYNAMODB_USERS_TABLE: "users"
          DYNAMODB_GUESTS_TABLE: "guests"
          CORS_ORIGIN: "https://party.matthewjamesquinn.com"
          EMAIL_FROM_NAME: "Matt Quinn"
          EMAIL_FROM: "invite@party.matthewjamesquinn.com"
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource:
                - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/users
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/guests
            - Effect: Allow
              Action:
                - ses:SendEmail
              Resource:
                - !Sub arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/matthewjamesquinn.com
                - !Sub arn:aws:ses:${AWS::Region}:${AWS::AccountId}:configuration-set/my-first-configuration-set
      Events:
        PartyAPI:
          Type: HttpApi
          Properties:
            ApiId: !Ref PartyApi
            Path: /admin/add_guest
            Method: post

  PartyApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Name: party-api
      CorsConfiguration:
        AllowMethods:
          - GET
          - POST
        AllowHeaders:
          - Content-Type
        AllowOrigins:
          - "https://party.matthewjamesquinn.com"
